/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/v1/shipping/trackers-batch": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Add tracking information for multiple PayPal transactions
         * @description Adds tracking information, with or without tracking numbers, for multiple PayPal transactions. Accepts up to 20 tracking IDs. For more information, see <a href="/docs/tracking/integrate/#add-tracking-information-with-tracking-numbers">Add tracking information with tracking numbers</a> and <a href="/docs/tracking/integrate/#add-tracking-information-without-tracking-numbers">Add tracking information without tracking numbers</a>.
         */
        post: operations["trackers-batch.post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/shipping/trackers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List tracking information
         * @description Lists tracking information that meet search criteria. The tracking ID is required but the tracking number is optional.
         */
        get: operations["trackers-batch.get"];
        put?: never;
        /**
         * Add tracking information for PayPal transaction
         * @description Adds tracking information for a PayPal transaction.
         */
        post: operations["trackers.post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/shipping/trackers/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Show tracking information
         * @description Shows tracking information, by tracker ID, for a PayPal transaction.
         */
        get: operations["trackers.get"];
        /**
         * Update or cancel tracking information for PayPal transaction
         * @description Updates or cancels the tracking information for a PayPal transaction, by ID. To cancel tracking information, call this method and set the status to CANCELLED. For more information, see <a href="/docs/tracking/integrate/#update-or-cancel-tracking-information">Update or cancel tracking information</a>.
         */
        put: operations["trackers.put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /**
         * Error Details
         * @description The error details. Required for client-side `4XX` errors.
         */
        error_details: {
            /** @description The field that caused the error. If this field is in the body, set this value to the field's JSON pointer value. Required for client-side errors. */
            field?: string;
            /** @description The value of the field that caused the error. */
            value?: string;
            location?: components["schemas"]["error_location"];
            /** @description The unique, fine-grained application-level error code. */
            issue: string;
            /** @description The human-readable description for an issue. The description can change over the lifetime of an API, so clients must not depend on this value. */
            description?: string;
        };
        /**
         * @description The location of the field that caused the error. Value is `body`, `path`, or `query`.
         * @default body
         * @enum {string}
         */
        error_location: "body" | "path" | "query";
        /**
         * Link Description
         * @description The request-related [HATEOAS link](/api/rest/responses/#hateoas-links) information.
         */
        error_link_description: {
            /** @description The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call. */
            href: string;
            /** @description The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml). */
            rel: string;
            /**
             * @description The HTTP method required to make the related call.
             * @enum {string}
             */
            method?: "GET" | "POST" | "PUT" | "DELETE" | "PATCH";
        };
        /**
         * Bad Request Error
         * @description Request is not well-formed, syntactically incorrect, or violates schema.
         */
        error_400: {
            /** @enum {string} */
            name?: "INVALID_REQUEST";
            /** @enum {string} */
            message?: "Request is not well-formed, syntactically incorrect, or violates schema.";
            details?: components["schemas"]["error_details"][];
            /** @description The PayPal internal ID. Used for correlation purposes. */
            debug_id?: string;
            /** @description An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS). */
            links?: components["schemas"]["error_link_description"][];
        };
        /**
         * Unauthorized Error
         * @description Authentication failed due to missing Authorization header, or invalid authentication credentials.
         */
        error_401: {
            /** @enum {string} */
            name?: "AUTHENTICATION_FAILURE";
            /** @enum {string} */
            message?: "Authentication failed due to missing authorization header, or invalid authentication credentials.";
            details?: components["schemas"]["error_details"][];
            /** @description The PayPal internal ID. Used for correlation purposes. */
            debug_id?: string;
            /** @description An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS). */
            links?: components["schemas"]["error_link_description"][];
        };
        /**
         * Not Authorized Error
         * @description The client is not authorized to access this resource, although it may have valid credentials.
         */
        error_403: {
            /** @enum {string} */
            name?: "NOT_AUTHORIZED";
            /** @enum {string} */
            message?: "Authorization failed due to insufficient permissions.";
            details?: components["schemas"]["error_details"][];
            /** @description The PayPal internal ID. Used for correlation purposes. */
            debug_id?: string;
            /** @description An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS). */
            links?: components["schemas"]["error_link_description"][];
        };
        /**
         * Not found Error
         * @description The server has not found anything matching the request URI. This either means that the URI is incorrect or the resource is not available.
         */
        error_404: {
            /** @enum {string} */
            name?: "RESOURCE_NOT_FOUND";
            /** @enum {string} */
            message?: "The specified resource does not exist.";
            details?: components["schemas"]["error_details"][];
            /** @description The PayPal internal ID. Used for correlation purposes. */
            debug_id?: string;
            /** @description An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS). */
            links?: components["schemas"]["error_link_description"][];
        };
        /**
         * Resource Conflict Error
         * @description The server has detected a conflict while processing this request.
         */
        error_409: {
            /** @enum {string} */
            name?: "RESOURCE_CONFLICT";
            /** @enum {string} */
            message?: "The server has detected a conflict while processing this request.";
            details?: components["schemas"]["error_details"][];
            /** @description The PayPal internal ID. Used for correlation purposes. */
            debug_id?: string;
            /** @description An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS). */
            links?: components["schemas"]["error_link_description"][];
        };
        /**
         * Unsupported Media Type Error
         * @description The server does not support the request payload's media type.
         */
        error_415: {
            /** @enum {string} */
            name?: "UNSUPPORTED_MEDIA_TYPE";
            /** @enum {string} */
            message?: "The server does not support the request payload's media type.";
            details?: components["schemas"]["error_details"][];
            /** @description The PayPal internal ID. Used for correlation purposes. */
            debug_id?: string;
            /** @description An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS). */
            links?: components["schemas"]["error_link_description"][];
        };
        /**
         * Unprocessable Entity Error
         * @description The requested action cannot be performed and may require interaction with APIs or processes outside of the current request. This is distinct from a 500 response in that there are no systemic problems limiting the API from performing the request.
         */
        error_422: {
            /** @enum {string} */
            name?: "UNPROCESSABLE_ENTITY";
            /** @enum {string} */
            message?: "The requested action could not be performed, semantically incorrect, or failed business validation.";
            details?: components["schemas"]["error_details"][];
            /** @description The PayPal internal ID. Used for correlation purposes. */
            debug_id?: string;
            /** @description An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS). */
            links?: components["schemas"]["error_link_description"][];
        };
        /**
         * Internal Server Error
         * @description This is either a system or application error, and generally indicates that although the client appeared to provide a correct request, something unexpected has gone wrong on the server.
         * @example {
         *       "name": "INTERNAL_SERVER_ERROR",
         *       "message": "An internal server error occurred.",
         *       "debug_id": "90957fca61718",
         *       "links": [
         *         {
         *           "href": "https://developer.paypal.com/api/orders/v2/#error-INTERNAL_SERVER_ERROR",
         *           "rel": "information_link"
         *         }
         *       ]
         *     }
         */
        error_500: {
            /** @enum {string} */
            name?: "INTERNAL_SERVER_ERROR";
            /** @enum {string} */
            message?: "An internal server error occurred.";
            /** @description The PayPal internal ID. Used for correlation purposes. */
            debug_id?: string;
            /** @description An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS). */
            links?: components["schemas"]["error_link_description"][];
        };
        /**
         * Service Unavailable Error
         * @description The server is temporarily unable to handle the request, for example, because of planned maintenance or downtime.
         * @example {
         *       "name": "SERVICE_UNAVAILABLE",
         *       "message": "Service Unavailable.",
         *       "debug_id": "90957fca61718",
         *       "information_link": "https://developer.paypal.com/docs/api/orders/v2/#error-SERVICE_UNAVAILABLE"
         *     }
         */
        error_503: {
            /** @enum {string} */
            name?: "SERVICE_UNAVAILABLE";
            /** @enum {string} */
            message?: "Service Unavailable.";
            /** @description The PayPal internal ID. Used for correlation purposes. */
            debug_id?: string;
            /** @description An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS). */
            links?: components["schemas"]["error_link_description"][];
        };
        /**
         * Tracking Number Type
         * @description The tracking number type.
         * @enum {string}
         */
        tracking_number_type: "CARRIER_PROVIDED" | "E2E_PARTNER_PROVIDED";
        /**
         * Tracking Status
         * @description The status of the item shipment. For allowed values, see <a href="/docs/tracking/reference/shipping-status/">Shipping Statuses</a>.
         * @enum {string}
         */
        tracking_status: "CANCELLED" | "DELIVERED" | "LOCAL_PICKUP" | "ON_HOLD" | "SHIPPED" | "SHIPMENT_CREATED" | "DROPPED_OFF" | "IN_TRANSIT" | "RETURNED" | "LABEL_PRINTED" | "ERROR" | "UNCONFIRMED" | "PICKUP_FAILED" | "DELIVERY_DELAYED" | "DELIVERY_SCHEDULED" | "DELIVERY_FAILED" | "INRETURN" | "IN_PROCESS" | "NEW" | "VOID" | "PROCESSED" | "NOT_SHIPPED" | "COMPLETED";
        /**
         * Format: ppaas_date_notime_v2
         * @description The stand-alone date, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). To represent special legal values, such as a date of birth, you should use dates with no associated time or time-zone data. Whenever possible, use the standard `date_time` type. This regular expression does not validate all dates. For example, February 31 is valid and nothing is known about leap years.
         */
        date_no_time: string;
        /**
         * Carrier
         * @description The carrier for the shipment. Some carriers have a global version as well as local subsidiaries. The subsidiaries are repeated over many countries and might also have an entry in the global list. Choose the carrier for your country. If the carrier is not available for your country, choose the global version of the carrier. If your carrier name is not in the list, set `carrier` to `OTHER` and set carrier name in `carrier_name_other`. For allowed values, see <a href="/docs/tracking/reference/carriers/">Carriers</a>.
         * @enum {string}
         */
        carrier: "2EBOX" | "360LION" | "3JMSLOGISTICS" | "4_72" | "6LS" | "A1POST" | "AAA_COOPER" | "ABCUSTOM" | "ABXEXPRESS_MY" | "ACOMMMERCE" | "ACSWORLDWIDE" | "ACS_GR" | "ADERONLINE" | "ADICIONAL" | "ADSONE" | "ADUIEPYLE" | "AERONET" | "AEX" | "AFLLOG_FTP" | "AGILITY" | "AIRMEE_WEBHOOK" | "AIR_CANADA_GLOBAL" | "ALFATREX" | "ALLIEDEXPRESS" | "ALLJOY" | "ALPHAFAST" | "ALWAYS_EXPRESS" | "AMAZON" | "AMAZON_FBA_SWISHIP" | "AMAZON_SHIP_MCF" | "AMSTAN" | "AMS_GRP" | "ANDREANI" | "ANICAM_BOX" | "ANJUN" | "ANSERX" | "AN_POST" | "AO_COURIER" | "AO_DEUTSCHLAND" | "APC_OVERNIGHT" | "APC_OVERNIGHT_CONNUM" | "APG" | "APRISAEXPRESS" | "AQUILINE" | "ARAMEX" | "ARAMEX_AU" | "ARCO_SPEDIZIONI" | "ARE_EMIRATES_POST" | "ARG_OCA" | "ARK_LOGISTICS" | "ASE" | "ASENDIA_HK" | "ASENDIA_UK" | "ASENDIA_USA" | "ASIGNA" | "AUPOST_CN" | "AUSTRIAN_POST_EXPRESS" | "AUS_STARTRACK" | "AUS_TOLL" | "AU_AUSTRIAN_POST" | "AU_AU_POST" | "AU_TNT" | "AVERITT" | "BEL_DHL" | "BEL_RS" | "BESTWAYPARCEL" | "BE_BPOST" | "BE_KIALA" | "BG_BULGARIAN_POST" | "BH_POSTA" | "BH_WORLDWIDE" | "BIRDSYSTEM" | "BJSHOMEDELIVERY" | "BLINKLASTMILE" | "BLR_BELPOST" | "BLUECARE" | "BLUESTAR" | "BLUEX" | "BNEED" | "BOMBINOEXP" | "BOND" | "BONDSCOURIERS" | "BORDEREXPRESS" | "BOX_BERRY" | "BPOST_INT" | "BRA_CORREIOS" | "BRING" | "BROUWER_TRANSPORT" | "BRT_IT" | "BRT_IT_PARCELID" | "BRT_IT_SENDER_REF" | "BUDBEE_WEBHOOK" | "BUYLOGIC" | "B_TWO_C_EUROPE" | "CAE_DELIVERS" | "CAINIAO" | "CARIBOU" | "CARRIERS" | "CARRY_FLAP" | "CA_CANADA_POST" | "CA_CANPAR" | "CA_GREYHOUND" | "CA_PUROLATOR" | "CBL_LOGISTICA" | "CDEK" | "CDEK_TR" | "CELERITAS" | "CELLO_SQUARE" | "CESKA_CZ" | "CEVA" | "CFL_LOGISTICS" | "CGS_EXPRESS" | "CHAMPION_LOGISTICS" | "CHITCHATS" | "CHOIR_EXP" | "CHROBINSON" | "CHRONOPOST_FR" | "CHUKOU1" | "CH_SWISS_POST_PRIORITY" | "CITYLINK_MY" | "CJPACKET" | "CJ_CENTURY" | "CJ_GLS" | "CJ_HK_INTERNATIONAL" | "CJ_INT_MY" | "CJ_KR" | "CJ_LOGISTICS" | "CJ_TH" | "CLEVY_LINKS" | "CLE_LOGISTICS" | "CLOUDWISH_ASIA" | "CNDEXPRESS" | "CNEXPS" | "CNWANGTONG" | "CN_17POST" | "CN_BESTEXPRESS" | "CN_BOXC" | "CN_CHINA_POST_EMS" | "CN_DPEX" | "CN_EMS" | "CN_EQUICK" | "CN_GOFLY" | "CN_JCEX" | "CN_PAYPAL_PACKAGE" | "CN_POST56" | "CN_SF_EXPRESS" | "CN_STO" | "CN_WEDO" | "CN_WISHPOST" | "CN_YUNDA" | "COLIS_PRIVE" | "COLLECTCO" | "COLLIVERY" | "COMET_TECH" | "CONTINENTAL" | "CON_WAY" | "COORDINADORA" | "COPA_COURIER" | "COPE" | "CORPORATECOURIERS_WEBHOOK" | "CORREOS_DE_MEXICO" | "CORREOS_ES" | "CORREOS_EXPRESS" | "CORREO_UY" | "COSTMETICSNOW" | "COURANT_PLUS" | "COUREX" | "COURIERS_PLEASE" | "CPACKET" | "CPEX" | "CROSHOT" | "CSE" | "CTC_EXPRESS" | "CUBYN" | "CUCKOOEXPRESS" | "CYPRUS_POST_CYP" | "DAIGLOBALTRACK" | "DAJIN" | "DANSKE_FRAGT" | "DAWN_WING" | "DAYTON_FREIGHT" | "DBSCHENKER_B2B" | "DBSCHENKER_SE" | "DBSCHENKER_SV" | "DDEXPRESS" | "DEALERSEND" | "DELIVERYONTIME" | "DELNEXT" | "DELTEC_UK" | "DEMANDSHIP" | "DESCARTES" | "DESIGNERTRANSPORT_WEBHOOK" | "DESTINY" | "DEX_I" | "DE_ASENDIA" | "DE_DEUTSCHE" | "DE_DEUTSCHE_POST_DHL_WITHIN_EUROPE_TRACKNET" | "DE_DHL_EXPRESS" | "DE_DPD_DELISTRACK" | "DE_GLS" | "DHL" | "DHL_ACTIVE_TRACING" | "DHL_AU" | "DHL_BENELUX" | "DHL_ECOMERCE_ASA" | "DHL_ES" | "DHL_FR" | "DHL_FREIGHT" | "DHL_GLOBAL_MAIL_ASIA" | "DHL_HK" | "DHL_JP" | "DHL_PARCEL_ES" | "DHL_PARCEL_NL" | "DHL_PARCEL_RU" | "DHL_PL" | "DHL_REFR" | "DHL_SG" | "DHL_SUPPLY_CHAIN" | "DHL_UK" | "DIAMOND_EUROGISTICS" | "DICOM" | "DIDADI" | "DIMERCO" | "DIRECTCOURIERS" | "DIRECTLOG" | "DIRECTPARCELS" | "DMM_NETWORK" | "DMS_MATRIX" | "DOBROPOST" | "DOORA" | "DOORDASH_WEBHOOK" | "DPD" | "DPD_DELISTRACK" | "DPD_FR" | "DPD_HGRY" | "DPD_HK" | "DPD_IR" | "DPD_LOCAL" | "DPD_LOCAL_REF" | "DPD_POLAND" | "DPD_RO" | "DPD_RU" | "DPEX" | "DPE_EXPRESS" | "DPE_SOUTH_AFRC" | "DSV" | "DTDC_AU" | "DTDC_EXPRESS" | "DTDC_IN" | "DTD_EXPR" | "DX_SFTP" | "DYLT" | "DYNALOGIC" | "EASY_MAIL" | "ECEXPRESS" | "ECHO" | "ECMS" | "ECOSCOOTING" | "EFEX" | "EFS" | "EKART" | "ELIAN_POST" | "EMPS_CN" | "ENDEAVOUR_DELIVERY" | "ENVIALIA_REFERENCE" | "EPARCEL_KR" | "EPST_GLBL" | "EP_BOX" | "ESHIPPING" | "ESP_ASM" | "ESP_ENVIALIA" | "ESP_MRW" | "ESP_NACEX" | "ESP_PACKLINK" | "ESP_REDUR" | "ETOMARS" | "ETOTAL" | "ETS_EXPRESS" | "EU_FLEET_SOLUTIONS" | "EU_IMX" | "EXPRESSSALE" | "EZSHIP" | "FARGOOD" | "FAR_INTERNATIONAL" | "FASTRACK" | "FASTRK_SERV" | "FASTWAY_IR" | "FASTWAY_NZ" | "FDSEXPRESS" | "FEDEX" | "FEDEX_CROSSBORDER" | "FEDEX_FR" | "FEDEX_INTL_MLSERV" | "FEDEX_POLAND" | "FEDEX_UK" | "FETCHR_WEBHOOK" | "FIEGE" | "FIEGE_NL" | "FIRSTMILE" | "FLASHEXPRESS" | "FMX" | "FONSEN" | "FORRUN" | "FREIGHTQUOTE" | "FRETERAPIDO" | "FR_BERT" | "FR_COLIS" | "FR_EXAPAQ" | "FR_GEODIS" | "FR_GLS" | "FULFILLA" | "FULFILLME" | "FURDECO" | "GAC" | "GANGBAO" | "GBA" | "GBS_BROKER" | "GB_APC" | "GB_ARROW" | "GB_NORSK" | "GB_PANTHER" | "GB_TUFFNELLS" | "GEIS" | "GEL_EXPRESS" | "GEMWORLDWIDE" | "GENERAL_OVERNIGHT" | "GENIKI_GR" | "GEODIS_ESPACE" | "GESWL" | "GIAO_HANG" | "GIO_EXPRESS" | "GLOBALTRANZ" | "GLOBAL_ABF" | "GLOBAL_ESTES" | "GLOBAL_EXPRESS" | "GLOBAL_IPARCEL" | "GLOBAL_TNT" | "GLOBAVEND" | "GLS_CROTIA" | "GLS_CZ" | "GLS_IT" | "GLS_ITALY" | "GLS_SLOV" | "GLS_SLOVEN" | "GOGLOBALPOST" | "GOJEK" | "GRAB_WEBHOOK" | "GRUPO" | "GR_ELTA" | "GSI_EXPRESS" | "GSO" | "HAPPY2POINT" | "HCT_LOGISTICS" | "HDB" | "HDB_BOX" | "HELLMANN" | "HELTHJEM" | "HEPPNER" | "HEPPNER_FR" | "HERMES" | "HERMES_2MANN_HANDLING" | "HERMES_DE" | "HH_EXP" | "HIPSHIPPER" | "HKD" | "HK_FLYT_EXPRESS" | "HK_FOUR_PX_EXPRESS" | "HK_POST" | "HK_TGX" | "HOLISOL" | "HOME_DELIVERY_SOLUTIONS" | "HOUNDEXPRESS" | "HRPARCEL" | "HRV_HRVATSKA" | "HUAHAN_EXPRESS" | "HUNTER_EXPRESS" | "HUODULL" | "HX_EXPRESS" | "IBEONE" | "ICUMULUS" | "IDEXPRESS" | "IDN_JNE" | "IDN_LION_PARCEL" | "IDN_PANDU" | "IML" | "INDOPAKET" | "IND_BLUEDART" | "IND_DELHIVERY" | "IND_DELIVREE" | "IND_DOTZOT" | "IND_ECOM" | "IND_FIRSTFLIGHT" | "IND_GATI" | "IND_GOJAVAS" | "IND_JAYONEXPRESS" | "IND_PROFESSIONAL_COURIERS" | "IND_SAFEEXPRESS" | "IND_XPRESSBEES" | "INPOST_PACZKOMATY" | "INTEGRA2_FTP" | "INTELIPOST" | "INTEL_VALLEY" | "INTERPARCEL_AU" | "INTERPARCEL_NZ" | "INTERPARCEL_UK" | "INTEXPRESS" | "ISRAEL_POST" | "ISR_POST_DOMESTIC" | "IT_DHL_ECOMMERCE" | "IT_FERCAM" | "IT_NEXIVE" | "IT_POSTE_ITALIA" | "IT_TNT" | "IVOY_WEBHOOK" | "I_DIKA" | "JANCO" | "JANIO" | "JERSEY_POST" | "JET_SHIP" | "JINDOUYUN" | "JINSUNG" | "JOCOM" | "JOOM_LOGIS" | "JOYING_BOX" | "JPN_JAPAN_POST" | "JPN_SAGAWA" | "JP_KURO_NEKO_YAMATO_UNYUU" | "JS_EXPRESS" | "JTEXPRESS" | "JTEXPRESS_VN" | "JX" | "J_NET" | "K1_EXPRESS" | "KANGAROO_MY" | "KEC" | "KERRYTJ" | "KERRYTTC_VN" | "KERRY_ECOMMERCE" | "KGMHUB" | "KHM_CAMBODIA_POST" | "KOR_ECARGO" | "KPOST" | "KR_KOREA_POST" | "KUEHNE" | "KURASI" | "KWE_GLOBAL" | "KWT" | "KYUNGDONG_PARCEL" | "KY_EXPRESS" | "LALAMOVE" | "LANDMARK_GLOBAL" | "LANDMARK_GLOBAL_REFERENCE" | "LAO_POST" | "LATVIJAS_PASTS" | "LA_POSTE_SUIVI" | "LBCEXPRESS_FTP" | "LEADER" | "LEGION_EXPRESS" | "LEXSHIP" | "LHT_EXPRESS" | "LICCARDI_EXPRESS" | "LIEFERY" | "LINE" | "LINKBRIDGE" | "LOCUS_WEBHOOK" | "LOGISTERS" | "LOGISTICSWORLDWIDE_HK" | "LOGISTIKA" | "LOGISTYX_TRANSGROUP" | "LONESTAR" | "LOOMIS_EXPRESS" | "LOTTE" | "LTIANEXP" | "LTL" | "LTU_LIETUVOS" | "MAGYAR_HU" | "MAILAMERICAS" | "MAILPLUS_JPN" | "MAIL_PLUS" | "MAINFREIGHT" | "MAINWAY" | "MARA_XPRESS" | "MATDESPATCH" | "MATKAHUOLTO" | "MBW" | "MEX_AEROFLASH" | "MEX_ESTAFETA" | "MEX_REDPACK" | "MEX_SENDA" | "MGLOBAL" | "MIKROPAKKET" | "MIKROPAKKET_BE" | "MILKMAN" | "MORE_LINK" | "MORNING_EXPRESS" | "MRW_FTP" | "MXE" | "MX_CARGO" | "MYHERMES" | "MYS_AIRPAK" | "MYS_EMS" | "MYS_GDEX" | "MYS_MYPOST_ONLINE" | "MYS_MYS_POST" | "MYS_SKYNET" | "M_XPRESS" | "NACEX" | "NACEX_ES" | "NANJINGWOYUAN" | "NATIONAL_SAMEDAY" | "NATIONEX" | "NATIONWIDE_MY" | "NEWAY" | "NEWEGGEXPRESS" | "NEWGISTICS" | "NEWZEALAND_COURIERS" | "NG_COURIERPLUS" | "NHANS_SOLUTIONS" | "NIM_EXPRESS" | "NINJAVAN_ID" | "NINJAVAN_MY" | "NINJAVAN_SG" | "NINJAVAN_THAI" | "NINJAVAN_WB" | "NIPOST_NG" | "NLD_DHL" | "NLD_GLS" | "NLD_POSTNL" | "NLD_TRANSMISSION" | "NOVA_POSHTA" | "NOVA_POSHTA_INT" | "NOX_NACHTEXPRESS" | "NOX_NIGHT_TIME_EXPRESS" | "NTLOGISTICS_VN" | "NZ_COURIER_POST" | "NZ_NZ_POST" | "OCS" | "OCS_WORLDWIDE" | "OKAYPARCEL" | "OMNIPARCEL" | "OMNIVA" | "ONECLICK" | "ONEWORLDEXPRESS" | "ORANGE_DS" | "OSM_WORLDWIDE" | "OVERSE_EXP" | "P2P_TRC" | "PAACK_WEBHOOK" | "PADTF" | "PAGO" | "PALEXPRESS" | "PALLETWAYS" | "PALLET_NETWORK" | "PANTHER_REFERENCE" | "PAN_ASIA" | "PAPERFLY" | "PAPER_EXPRESS" | "PAQUETEXPRESS" | "PARCEL2GO" | "PARCELINKLOGISTICS" | "PARCELLED_IN" | "PARCELONE" | "PARCELPAL_WEBHOOK" | "PARCELPOINT" | "PARCELPOST_SG" | "PARCEL_2_POST" | "PARKNPARCEL" | "PCFCORP" | "PFCEXPRESS" | "PFLOGISTICS" | "PHL_AIR21" | "PHL_AIRSPEED" | "PHL_JAMEXPRESS" | "PICKRR" | "PICKUP" | "PICKUPP_MYS" | "PICKUPP_SGP" | "PILOT_FREIGHT" | "PIL_LOGISTICS" | "PITNEY_BOWES" | "PITTOHIO" | "PIXSELL" | "PLANZER" | "PLUS_LOG_UK" | "PL_POCZTA_POLSKA" | "POL_SIODEMKA" | "PONY_EXPRESS" | "POSTA_PLUS" | "POSTA_RO" | "POSTA_UKR" | "POSTEN_NORGE" | "POSTI" | "POSTNL_INTL_3S" | "POSTNL_INT_3_S" | "POSTNORD_LOGISTICS" | "POSTNORD_LOGISTICS_DK" | "POSTUR_IS" | "POST_SERBIA" | "POST_SLOVENIA" | "PRESIDENT_TRANS" | "PRESSIODE" | "PRIMAMULTICIPTA" | "PROMEDDELIVERY" | "PRT_CHRONOPOST" | "PRT_CTT" | "PRT_INT_SEUR" | "PRT_SEUR" | "PTS" | "PTT_POST" | "QUANTIUM" | "QWINTRY" | "RABEN_GROUP" | "RAF_PH" | "RAIDEREX" | "RAM" | "RCL" | "RINCOS" | "RL_US" | "ROADBULL" | "ROADRUNNER_FREIGHT" | "ROCKET_PARCEL" | "ROUTIFIC_WEBHOOK" | "ROYAL_MAIL" | "RPD2MAN" | "RPX" | "RPXLOGISTICS" | "RPX_ID" | "RUSSIAN_POST" | "RUSTON" | "RZYEXPRESS" | "SAIA_FREIGHT" | "SAILPOST" | "SAP_EXPRESS" | "SAU_SAUDI_POST" | "SCUDEX_EXPRESS" | "SDA_IT" | "SDH_SCM" | "SEFL" | "SEINO" | "SEKOLOGISTICS" | "SEKO_SFTP" | "SENDING" | "SENDIT" | "SENDLE" | "SEUR_ES" | "SEUR_SP_API" | "SFB2C" | "SFCSERVICE" | "SFC_LOGISTICS" | "SFPLUS_WEBHOOK" | "SF_EX" | "SG_DETRACK" | "SG_QXPRESS" | "SG_SG_POST" | "SG_SPEEDPOST" | "SG_TAQBIN" | "SHENZHEN" | "SHIPENTEGRA" | "SHIPPIT" | "SHIPTER" | "SHIPTOR" | "SHIP_GATE" | "SHIP_IT_ASIA" | "SHOPFANS" | "SHREENANDANCOURIER" | "SHREETIRUPATI" | "SHREE_ANJANI_COURIER" | "SHREE_MARUTI" | "SIMPLYPOST" | "SINOTRANS" | "SIN_GLBL" | "SKYBOX" | "SKYNET_UAE" | "SKYNET_UK" | "SKYNET_WORLDWIDE" | "SKYNET_ZA" | "SKY_POSTAL" | "SK_POSTA" | "SMG_EXPRESS" | "SMOOTH" | "SMSA_EXPRESS" | "SONICTL" | "SOUTH_AFRICAN_POST_OFFICE" | "SPEEDCOURIERS_GR" | "SPEEDEE" | "SPEEDEXCOURIER" | "SPOTON" | "SPRING_GDS" | "SRE_KOREA" | "STALLIONEXPRESS" | "STARKEN" | "STAR_TRACK_EXPRESS" | "STAR_TRACK_NEXT_FLIGHT" | "STEPFORWARDFS" | "STONE3PL" | "STRECK_TRANSPORT" | "SUTTON" | "SWE_POSTNORD" | "SWISHIP_DE" | "SWISS_POST_FTP" | "SYPOST" | "SZENDEX" | "TAQBIN_HK" | "TAQBIN_MY" | "TARRIVE" | "TAZMANIAN_FREIGHT" | "TCK_EXPRESS" | "TCS" | "TFM" | "TFORCE_FINALMILE" | "THABIT_LOGISTICS" | "THA_DYNAMIC_LOGISTICS" | "THA_KERRY" | "THA_THAILAND_POST" | "THECOURIERGUY" | "THEDELIVERYGROUP" | "THENILE_WEBHOOK" | "TIGFREIGHT" | "TIKI_ID" | "TIPSA" | "TNT" | "TNT_CLICK_IT" | "TNT_FR" | "TNT_NL" | "TNT_REFR" | "TNT_UK" | "TNT_UK_REFR" | "TOLL" | "TOLL_NZ" | "TOLOS" | "TOPHATTEREXPRESS" | "TOPYOU" | "TOTAL_EXPRESS" | "TOURLINE" | "TRACKON" | "TRANS_KARGO" | "TRUMPCARD" | "TRUNKRS_WEBHOOK" | "TUFFNELLS_REFERENCE" | "TWO_GO" | "TW_TAIWAN_POST" | "UBI_LOGISTICS" | "UC_EXPRE" | "UDS" | "UK_COLLECTPLUS" | "UK_DPD" | "UK_NIGHTLINE" | "UK_PARCELFORCE" | "UK_UK_MAIL" | "UK_XDP" | "UK_YODEL" | "UPS" | "UPS_FREIGHT" | "UPS_MAIL_INNOVATIONS" | "UPS_REFERENCE" | "USF_REDDAWAY" | "USHIP" | "USPS" | "US_ENSENDA" | "US_GLOBEGISTICS" | "US_LASERSHIP" | "US_OLD_DOMINION" | "US_ONTRAC" | "US_YRC" | "VAMOX" | "VENIPAK" | "VIAEUROPE" | "VIA_EXPRESS" | "VIRTRANSPORT" | "VIWO" | "VNM_VIETNAM_POST" | "VNM_VIETTELPOST" | "WAHANA_ID" | "WANBEXPRESS" | "WEASHIP" | "WEPOST" | "WESTBANK_COURIER" | "WESTGATE_GL" | "WHISTL" | "WINIT" | "WISELOADS" | "WISE_EXPRESS" | "WIZMO" | "WMG" | "WNDIRECT" | "WYNGS" | "XDE_WEBHOOK" | "XDP_UK_REFERENCE" | "XL_EXPRESS" | "XPERT_DELIVERY" | "XPOST" | "XPO_LOGISTICS" | "XPRESSEN_DK" | "XQ_EXPRESS" | "YAKIT" | "YANWEN" | "YDH_EXPRESS" | "YINGNUO_LOGISTICS" | "YODEL_DIR" | "YODEL_INTNL" | "YTO" | "YUNEXPRESS" | "YURTICI_KARGO" | "YUSEN" | "ZAJIL_EXPRESS" | "ZA_COURIERIT" | "ZA_FASTWAY" | "ZA_SPECIALISED_FREIGHT" | "ZEEK_2_DOOR" | "ZELERIS" | "ZEPTO_EXPRESS" | "ZES_EXPRESS" | "ZIINGFINALMILE" | "ZINC" | "ZJS_EXPRESS" | "ZTO_EXPRESS" | "ZYLLEM";
        /**
         * Format: ppaas_date_time_v3
         * @description The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.<blockquote><strong>Note:</strong> The regular expression provides guidance but does not reject all invalid dates.</blockquote>
         */
        date_time: string;
        /**
         * Link Description
         * @description A request-related [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links).
         */
        link_description: {
            /** @description The complete target URL. To make the related call, combine the method with this link, in [URI template format](https://tools.ietf.org/html/rfc6570). Include the `$`, `(`, and `)` characters for pre-processing. The `href` is the key HATEOAS component that links a completed call with a subsequent call. */
            href: string;
            /** @description The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml). */
            rel: string;
            /**
             * @description The HTTP method required to make the related call.
             * @enum {string}
             */
            method?: "GET" | "POST" | "PUT" | "DELETE" | "HEAD" | "CONNECT" | "OPTIONS" | "PATCH";
        };
        /**
         * Tracker
         * @description The tracking information for a shipment.
         */
        tracker: {
            /** @description The PayPal transaction ID. */
            transaction_id: string;
            /** @description The tracking number for the shipment. */
            tracking_number?: string;
            /** @description The type of tracking number. */
            tracking_number_type?: components["schemas"]["tracking_number_type"];
            status: components["schemas"]["tracking_status"];
            /** @description The date when the shipment occurred, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). */
            shipment_date?: components["schemas"]["date_no_time"];
            carrier?: components["schemas"]["carrier"];
            /** @description The name of the carrier for the shipment. Provide this value only if the carrier parameter is OTHER. */
            carrier_name_other?: string;
            /** @description The postage payment ID. */
            readonly postage_payment_id?: string;
            /**
             * @description If true , sends an email notification to the buyer of the PayPal transaction. The email contains the tracking information that was uploaded through the API.
             * @default false
             */
            notify_buyer: boolean;
            /** @description The quantity of items shipped. */
            readonly quantity?: number;
            /** @description Indicates whether the carrier validated the tracking number. */
            readonly tracking_number_validated?: boolean;
            /** @description The date and time when the tracking information was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). */
            last_updated_time?: components["schemas"]["date_time"];
            /**
             * @description To denote whether the shipment is sent forward to the receiver or returned back.
             * @enum {string}
             */
            shipment_direction?: "FORWARD" | "RETURN";
            /**
             * @description To denote which party uploaded the shipment tracking info.
             * @enum {string}
             */
            readonly shipment_uploader?: "MERCHANT" | "CONSUMER" | "PARTNER";
            /** @description Encrypted PayPal Account ID of the buyer or seller. */
            readonly account_id?: string;
            /**
             * Format: uri
             * @description Tracking Link of the shipment.
             */
            tracking_url?: string;
            /** @description An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links). */
            readonly links?: components["schemas"]["link_description"][];
        };
        /**
         * Tracker Collection
         * @description The add tracking information for one or more transactions response details.
         */
        tracker_collection: {
            /** @description An array of tracking information for shipments. */
            trackers?: components["schemas"]["tracker"][];
            /** @description An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links). */
            readonly links?: components["schemas"]["link_description"][];
        };
        /**
         * Error Details
         * @description The error details. Required for client-side `4XX` errors.
         */
        "error_details-2": {
            /** @description The field that caused the error. If this field is in the body, set this value to the field's JSON pointer value. Required for client-side errors. */
            field?: string;
            /** @description The value of the field that caused the error. */
            value?: string;
            /**
             * @description The location of the field that caused the error. Value is `body`, `path`, or `query`.
             * @default body
             */
            location: string;
            /** @description The unique, fine-grained application-level error code. */
            issue: string;
            /** @description The human-readable description for an issue. The description can change over the lifetime of an API, so clients must not depend on this value. */
            description?: string;
        };
        /**
         * Link Description
         * @description The request-related [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) information.
         */
        "link_description-2": {
            /** @description The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call. */
            href: string;
            /** @description The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml). */
            rel: string;
            /**
             * @description The HTTP method required to make the related call.
             * @enum {string}
             */
            method?: "GET" | "POST" | "PUT" | "DELETE" | "HEAD" | "CONNECT" | "OPTIONS" | "PATCH";
        };
        /**
         * Error
         * @description The error details.
         */
        error: {
            /** @description The human-readable, unique name of the error. */
            name: string;
            /** @description The message that describes the error. */
            message: string;
            /** @description The PayPal internal ID. Used for correlation purposes. */
            debug_id: string;
            /** @description The information link, or URI, that shows detailed information about this error for the developer. */
            readonly information_link?: string;
            /** @description An array of additional details about the error. */
            details?: components["schemas"]["error_details-2"][];
            /** @description An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links). */
            readonly links?: components["schemas"]["link_description-2"][];
        };
        /**
         * Tracking Identifier
         * @description The tracking identifiers for a shipment.
         */
        tracker_identifier: {
            /** @description The PayPal transaction ID. */
            transaction_id: string;
            /** @description The tracking number for the shipment. */
            tracking_number?: string;
            /** @description An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links). */
            readonly links?: components["schemas"]["link_description"][];
        };
        /**
         * Batch Tracker Collection
         * @description The add tracking information for multiple PayPal transactions response details.
         */
        batch_tracker_collection: {
            /** @description The batch header. */
            tracker_identifiers?: components["schemas"]["tracker_identifier"][];
            /** @description An array of error responses. */
            errors?: components["schemas"]["error"][];
            /** @description An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links). */
            readonly links?: components["schemas"]["link_description"][];
        };
        /**
         * Tracker Identifier Collection
         * @description The add tracking information for a PayPal transaction response details.
         */
        tracker_identifier_collection: {
            /** @description An array of tracking IDs. */
            tracker_identifiers?: components["schemas"]["tracker_identifier"][];
            /** @description An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links). */
            readonly links?: components["schemas"]["link_description"][];
        };
    };
    responses: never;
    parameters: {
        /** @description Filters the tracking information that appears in the response by a PayPal transaction ID. */
        transaction_id: string;
        /** @description Filters the tracking information that appears in the response by a tracking number. */
        tracking_number: string;
        /** @description Encrypted PayPal Account ID of the buyer or seller. */
        account_id: string;
        /** @description The ID of the tracker in the <code><var>transaction_id</var>-<var>tracking_number</var></code> format. */
        id: string;
    };
    requestBodies: {
        tracker_collection: {
            content: {
                "application/json": components["schemas"]["tracker_collection"];
            };
        };
    };
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    "trackers-batch.post": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: components["requestBodies"]["tracker_collection"];
        responses: {
            /** @description A successful request returns the HTTP 200 OK status code and a JSON response body that shows tracking information. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["batch_tracker_collection"];
                };
            };
            /** @description The request is not well-formed, syntactically incorrect, or violates schema. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The authorization failed due to insufficient permissions. */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description An internal server error has occurred. */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The error response. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["error"];
                };
            };
        };
    };
    "trackers-batch.get": {
        parameters: {
            query: {
                /** @description Filters the tracking information that appears in the response by a PayPal transaction ID. */
                transaction_id: components["parameters"]["transaction_id"];
                /** @description Filters the tracking information that appears in the response by a tracking number. */
                tracking_number?: components["parameters"]["tracking_number"];
                /** @description Encrypted PayPal Account ID of the buyer or seller. */
                account_id?: components["parameters"]["account_id"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description A successful request returns the HTTP 200 OK status code and a JSON response body that lists tracking information that meets search criteria. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["tracker"];
                };
            };
            /** @description The error response. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["error"];
                };
            };
        };
    };
    "trackers.post": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: components["requestBodies"]["tracker_collection"];
        responses: {
            /** @description A successful request returns the HTTP 200 OK status code and a JSON response body that shows tracking information. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["tracker_identifier_collection"];
                };
            };
            /** @description The error response. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["error"];
                };
            };
        };
    };
    "trackers.get": {
        parameters: {
            query?: {
                /** @description Encrypted PayPal Account ID of the buyer or seller. */
                account_id?: components["parameters"]["account_id"];
            };
            header?: never;
            path: {
                /** @description The ID of the tracker in the <code><var>transaction_id</var>-<var>tracking_number</var></code> format. */
                id: components["parameters"]["id"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description A successful request returns the HTTP `200 OK` status code and a JSON response body that shows tracking information. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["tracker"];
                };
            };
            /** @description The error response. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["error"];
                };
            };
        };
    };
    "trackers.put": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The ID of the tracker in the <code><var>transaction_id</var>-<var>tracking_number</var></code> format. */
                id: components["parameters"]["id"];
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["tracker"];
            };
        };
        responses: {
            /** @description A successful request returns the HTTP 204 OK status code with no JSON response body. */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The error response. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["error"];
                };
            };
        };
    };
}
