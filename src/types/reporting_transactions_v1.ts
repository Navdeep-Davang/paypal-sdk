/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/v1/reporting/transactions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List transactions
         * @description Lists transactions. Specify one or more query parameters to filter the transaction that appear in the response.<blockquote><strong>Notes:</strong> <ul><li>If you specify one or more optional query parameters, the <code>ending_balance</code> response field is empty.</li><li>It takes a maximum of three hours for executed transactions to appear in the list transactions call.</li><li>This call lists transaction for the previous three years.</li></ul></blockquote>
         */
        get: operations["search.get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/reporting/balances": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List all balances
         * @description List all balances. Specify date time to list balances for that time that appear in the response.<blockquote><strong>Notes:</strong> <ul><li>It takes a maximum of three hours for balances to appear in the list balances call.</li><li>This call lists balances upto the previous three years.</li></ul></blockquote>
         */
        get: operations["balances.get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /**
         * Error Details
         * @description The error details. Required for client-side `4XX` errors.
         */
        error_details: {
            /** @description The field that caused the error. If this field is in the body, set this value to the field's JSON pointer value. Required for client-side errors. */
            field?: string;
            /** @description The value of the field that caused the error. */
            value?: string;
            location?: components["schemas"]["error_location"];
            /** @description The unique, fine-grained application-level error code. */
            issue: string;
            /** @description The human-readable description for an issue. The description can change over the lifetime of an API, so clients must not depend on this value. */
            description?: string;
        };
        /**
         * @description The location of the field that caused the error. Value is `body`, `path`, or `query`.
         * @default body
         * @enum {string}
         */
        error_location: "body" | "path" | "query";
        /** @description The default error response. */
        error_default: components["schemas"]["error_400"] | components["schemas"]["error_401"] | components["schemas"]["error_403"] | components["schemas"]["error_404"] | components["schemas"]["error_409"] | components["schemas"]["error_415"] | components["schemas"]["error_422"] | components["schemas"]["error_500"] | components["schemas"]["error_503"];
        /**
         * Link Description
         * @description The request-related [HATEOAS link](/api/rest/responses/#hateoas-links) information.
         */
        error_link_description: {
            /** @description The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call. */
            href: string;
            /** @description The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml). */
            rel: string;
            /**
             * @description The HTTP method required to make the related call.
             * @enum {string}
             */
            method?: "GET" | "POST" | "PUT" | "DELETE" | "PATCH";
        };
        /**
         * Bad Request Error
         * @description Request is not well-formed, syntactically incorrect, or violates schema.
         */
        error_400: {
            /** @enum {string} */
            name?: "INVALID_REQUEST";
            /** @enum {string} */
            message?: "Request is not well-formed, syntactically incorrect, or violates schema.";
            details?: components["schemas"]["error_details"][];
            /** @description The PayPal internal ID. Used for correlation purposes. */
            debug_id?: string;
            /** @description An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS). */
            links?: components["schemas"]["error_link_description"][];
        };
        /**
         * Unauthorized Error
         * @description Authentication failed due to missing Authorization header, or invalid authentication credentials.
         */
        error_401: {
            /** @enum {string} */
            name?: "AUTHENTICATION_FAILURE";
            /** @enum {string} */
            message?: "Authentication failed due to missing authorization header, or invalid authentication credentials.";
            details?: components["schemas"]["error_details"][];
            /** @description The PayPal internal ID. Used for correlation purposes. */
            debug_id?: string;
            /** @description An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS). */
            links?: components["schemas"]["error_link_description"][];
        };
        /**
         * Not Authorized Error
         * @description The client is not authorized to access this resource, although it may have valid credentials.
         */
        error_403: {
            /** @enum {string} */
            name?: "NOT_AUTHORIZED";
            /** @enum {string} */
            message?: "Authorization failed due to insufficient permissions.";
            details?: components["schemas"]["error_details"][];
            /** @description The PayPal internal ID. Used for correlation purposes. */
            debug_id?: string;
            /** @description An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS). */
            links?: components["schemas"]["error_link_description"][];
        };
        /**
         * Not found Error
         * @description The server has not found anything matching the request URI. This either means that the URI is incorrect or the resource is not available.
         */
        error_404: {
            /** @enum {string} */
            name?: "RESOURCE_NOT_FOUND";
            /** @enum {string} */
            message?: "The specified resource does not exist.";
            details?: components["schemas"]["error_details"][];
            /** @description The PayPal internal ID. Used for correlation purposes. */
            debug_id?: string;
            /** @description An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS). */
            links?: components["schemas"]["error_link_description"][];
        };
        /**
         * Resource Conflict Error
         * @description The server has detected a conflict while processing this request.
         */
        error_409: {
            /** @enum {string} */
            name?: "RESOURCE_CONFLICT";
            /** @enum {string} */
            message?: "The server has detected a conflict while processing this request.";
            details?: components["schemas"]["error_details"][];
            /** @description The PayPal internal ID. Used for correlation purposes. */
            debug_id?: string;
            /** @description An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS). */
            links?: components["schemas"]["error_link_description"][];
        };
        /**
         * Unsupported Media Type Error
         * @description The server does not support the request payload's media type.
         */
        error_415: {
            /** @enum {string} */
            name?: "UNSUPPORTED_MEDIA_TYPE";
            /** @enum {string} */
            message?: "The server does not support the request payload's media type.";
            details?: components["schemas"]["error_details"][];
            /** @description The PayPal internal ID. Used for correlation purposes. */
            debug_id?: string;
            /** @description An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS). */
            links?: components["schemas"]["error_link_description"][];
        };
        /**
         * Unprocessable Entity Error
         * @description The requested action cannot be performed and may require interaction with APIs or processes outside of the current request. This is distinct from a 500 response in that there are no systemic problems limiting the API from performing the request.
         */
        error_422: {
            /** @enum {string} */
            name?: "UNPROCESSABLE_ENTITY";
            /** @enum {string} */
            message?: "The requested action could not be performed, semantically incorrect, or failed business validation.";
            details?: components["schemas"]["error_details"][];
            /** @description The PayPal internal ID. Used for correlation purposes. */
            debug_id?: string;
            /** @description An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS). */
            links?: components["schemas"]["error_link_description"][];
        };
        /**
         * Internal Server Error
         * @description This is either a system or application error, and generally indicates that although the client appeared to provide a correct request, something unexpected has gone wrong on the server.
         * @example {
         *       "name": "INTERNAL_SERVER_ERROR",
         *       "message": "An internal server error occurred.",
         *       "debug_id": "90957fca61718",
         *       "links": [
         *         {
         *           "href": "https://developer.paypal.com/api/orders/v2/#error-INTERNAL_SERVER_ERROR",
         *           "rel": "information_link"
         *         }
         *       ]
         *     }
         */
        error_500: {
            /** @enum {string} */
            name?: "INTERNAL_SERVER_ERROR";
            /** @enum {string} */
            message?: "An internal server error occurred.";
            /** @description The PayPal internal ID. Used for correlation purposes. */
            debug_id?: string;
            /** @description An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS). */
            links?: components["schemas"]["error_link_description"][];
        };
        /**
         * Service Unavailable Error
         * @description The server is temporarily unable to handle the request, for example, because of planned maintenance or downtime.
         * @example {
         *       "name": "SERVICE_UNAVAILABLE",
         *       "message": "Service Unavailable.",
         *       "debug_id": "90957fca61718",
         *       "information_link": "https://developer.paypal.com/docs/api/orders/v2/#error-SERVICE_UNAVAILABLE"
         *     }
         */
        error_503: {
            /** @enum {string} */
            name?: "SERVICE_UNAVAILABLE";
            /** @enum {string} */
            message?: "Service Unavailable.";
            /** @description The PayPal internal ID. Used for correlation purposes. */
            debug_id?: string;
            /** @description An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS). */
            links?: components["schemas"]["error_link_description"][];
        };
        /**
         * Format: ppaas_date_time_v3
         * @description The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.<blockquote><strong>Note:</strong> The regular expression provides guidance but does not reject all invalid dates.</blockquote>
         */
        date_time: string;
        /**
         * Format: ppaas_common_currency_code_v2
         * @description The [three-character ISO-4217 currency code](/docs/integration/direct/rest/currency-codes/) that identifies the currency.
         */
        currency_code: string;
        /**
         * Money
         * @description The currency and amount for a financial transaction, such as a balance or payment due.
         */
        money: {
            currency_code: components["schemas"]["currency_code"];
            /** @description The value, which might be:<ul><li>An integer for currencies like `JPY` that are not typically fractional.</li><li>A decimal fraction for currencies like `TND` that are subdivided into thousandths.</li></ul>For the required number of decimal places for a currency code, see [Currency Codes](/docs/integration/direct/rest/currency-codes/). */
            value: string;
        };
        /**
         * Format: ppaas_common_percentage_v2
         * @description The percentage, as a fixed-point, signed decimal number. For example, define a 19.99% interest rate as `19.99`.
         */
        percentage: string;
        /**
         * Transaction Information
         * @description The transaction information.
         */
        transaction_info: {
            /** @description The ID of the PayPal account of the counterparty. */
            paypal_account_id?: string;
            /** @description The PayPal-generated transaction ID. */
            readonly transaction_id?: string;
            /** @description The PayPal-generated base ID. PayPal exclusive. Cannot be altered. Defined as a related, pre-existing transaction or event. */
            paypal_reference_id?: string;
            /**
             * @description The PayPal reference ID type.
             * @enum {string}
             */
            paypal_reference_id_type?: "ODR" | "TXN" | "SUB" | "PAP";
            /** @description A five-digit transaction event code that classifies the transaction type based on money movement and debit or credit. For example, <code>T0001</code>. See [Transaction event codes](/docs/integration/direct/transaction-search/transaction-event-codes/). */
            transaction_event_code?: string;
            /** @description The date and time when work on a transaction began in the PayPal system, as expressed in the time zone of the account on this side of the payment. Specify the value in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). */
            transaction_initiation_date?: components["schemas"]["date_time"];
            /** @description The date and time when the transaction was last changed, as expressed in the time zone of the account on this side of the payment. Specify the value in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). */
            transaction_updated_date?: components["schemas"]["date_time"];
            /** @description The all-inclusive gross transaction amount that was transferred between the sender and receiver through PayPal. */
            transaction_amount?: components["schemas"]["money"];
            /** @description The PayPal fee amount. All transaction fees are included in this amount, which is the record of fee associated with the transaction.<blockquote><strong>Note:</strong> This field contains a value only when a transaction fee is applied and processed for this transaction.</blockquote> */
            fee_amount?: components["schemas"]["money"];
            /** @description The reduction in price offered for goods or services purchased.<blockquote><strong>Note:</strong> This discount is for a price reduction that is offered for other than that at a individual item level.</blockquote> */
            discount_amount?: components["schemas"]["money"];
            /** @description An insurance charge. Guarantees the quality or delivery of a product. */
            insurance_amount?: components["schemas"]["money"];
            /** @description The PayPal- or merchant-reported sales tax amount for the transaction. */
            sales_tax_amount?: components["schemas"]["money"];
            /** @description The PayPal- or merchant-reported shipping amount for the transaction. */
            shipping_amount?: components["schemas"]["money"];
            /** @description The discount on the shipping amount. */
            shipping_discount_amount?: components["schemas"]["money"];
            /** @description The tax on the shipping service. */
            shipping_tax_amount?: components["schemas"]["money"];
            /** @description The special amount that is added to the transaction. */
            other_amount?: components["schemas"]["money"];
            /** @description The tip. */
            tip_amount?: components["schemas"]["money"];
            /** @description A code that indicates the transaction status. Value is:<table><thead><tr><th>Status&nbsp;code</th><th>Description</th></tr></thead><tbody><tr><td><code>D</code></td><td>PayPal or merchant rules denied the transaction.</td></tr><tr><td><code>P</code></td><td>The transaction is pending. The transaction was created but waits for another payment process to complete, such as an ACH transaction, before the status changes to <code>S</code>.</td></tr><tr><td><code>S</code></td><td>The transaction successfully completed without a denial and after any pending statuses.</td></tr><tr><td><code>V</code></td><td>A successful transaction was fully reversed and funds were refunded to the original sender.</td></tr></tbody></table> */
            transaction_status?: string;
            /** @description The subject of payment. The payer passes this value to the payee. The payer controls this data through the interface through which he or she sends the data. */
            transaction_subject?: string;
            /** @description A special note that the payer passes to the payee. Might contain special customer requests, such as shipping instructions. */
            transaction_note?: string;
            /** @description The payment tracking ID, which is a unique ID that partners specify to either get information about a payment or request a refund. */
            payment_tracking_id?: string;
            /** @description The bank reference ID. The bank provides this value for an ACH transaction. */
            bank_reference_id?: string;
            /** @description The ending balance.<blockquote><strong>Note:</strong> If you specify one or more optional query parameters, the <code>ending_balance</code> response field is empty.</blockquote> */
            ending_balance?: components["schemas"]["money"];
            /** @description The available amount of transaction currency during the completion of this transaction. */
            available_balance?: components["schemas"]["money"];
            /** @description The invoice ID that is sent by the merchant with the transaction.<blockquote><strong>Note:</strong> If an invoice ID was sent with the capture request, the value is reported. Otherwise, the invoice ID of the authorizing transaction is reported.</blockquote> */
            invoice_id?: string;
            /** @description The merchant-provided custom text.<blockquote><strong>Note:</strong> Usually, this field includes the unique ID for payments made with MassPay type transaction.</blockquote> */
            custom_field?: string;
            /** @description Indicates whether the transaction is eligible for protection. Value is:<ul><li><code>01</code>. Eligible.</li><li><code>02</code>. Not eligible</li><li><code>03</code>. Partially eligible.</li></ul> */
            protection_eligibility?: string;
            /** @description The credit term. The time span covered by the installment payments as expressed in the term length plus the length time unit code. */
            credit_term?: string;
            /** @description The overall amount of the credit transaction fee. */
            credit_transactional_fee?: components["schemas"]["money"];
            /** @description The overall amount of the credit promotional fee. */
            credit_promotional_fee?: components["schemas"]["money"];
            /** @description The annual percentage rate (APR). Determines the amount of interest a consumer pays to finance a purchase at a merchant. */
            annual_percentage_rate?: components["schemas"]["percentage"];
            /** @description The payment method that was used for a transaction. Value is <code>PUI</code>, <code>installment</code>, or <code>mEFT</code>.<blockquote><strong>Note:</strong> Appears only for pay upon invoice (PUI), installment, and mEFT transactions. Merchants and partners in the EMEA region can use this attribute to note transactions that attract turn-over tax.</blockquote> */
            payment_method_type?: string;
            /** @description A high-level classification of the type of financial instrument that was used to fund a payment. The pattern is not provided because the value is defined by an external party. E.g. PAYPAL, CREDIT_CARD, DEBIT_CARD, APPLE_PAY, BANK , VENMO ,Pay Upon Invoice, Pay Later  or <a href="https://developer.paypal.com/docs/checkout/integration-features/alternative-payment-methods/" title="Link to available APM list">Alternative Payment Methods (APM)</a>. */
            instrument_type?: string;
            /** @description A finer-grained classification of the financial instrument that was used to fund a payment. For example, `Visa card` or a `Mastercard` for a credit card, BANKCARD ,DISCOVER etc. The pattern is not provided because the value is defined by an external party. */
            instrument_sub_type?: string;
        };
        /**
         * Format: ppaas_common_email_address_v2
         * @description The internationalized email address.<blockquote><strong>Note:</strong> Up to 64 characters are allowed before and 255 characters are allowed after the <code>@</code> sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted <code>@</code> sign exists.</blockquote>
         */
        email_address: string;
        /**
         * Phone
         * @description The phone number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en).
         */
        phone: {
            /** @description The country calling code (CC), in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). The combined length of the CC and the national number must not be greater than 15 digits. The national number consists of a national destination code (NDC) and subscriber number (SN). */
            country_code: string;
            /** @description The national number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). The combined length of the country calling code (CC) and the national number must not be greater than 15 digits. The national number consists of a national destination code (NDC) and subscriber number (SN). */
            national_number: string;
            /** @description The extension number. */
            extension_number?: string;
        };
        /**
         * Name
         * @description The name of the party.
         */
        name: {
            /** @description The prefix, or title, to the party's name. */
            prefix?: string;
            /** @description When the party is a person, the party's given, or first, name. */
            given_name?: string;
            /** @description When the party is a person, the party's surname or family name. Also known as the last name. Required when the party is a person. Use also to store multiple surnames including the matronymic, or mother's, surname. */
            surname?: string;
            /** @description When the party is a person, the party's middle name. Use also to store multiple middle names including the patronymic, or father's, middle name. */
            middle_name?: string;
            /** @description The suffix for the party's name. */
            suffix?: string;
            /** @description DEPRECATED. The party's alternate name. Can be a business name, nickname, or any other name that cannot be split into first, last name. Required when the party is a business. */
            alternate_full_name?: string;
            /** @description When the party is a person, the party's full name. */
            full_name?: string;
        };
        /**
         * Format: ppaas_common_country_code_v2
         * @description The [two-character ISO 3166-1 code](/docs/integration/direct/rest/country-codes/) that identifies the country or region.<blockquote><strong>Note:</strong> The country code for Great Britain is <code>GB</code> and not <code>UK</code> as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.</blockquote>
         */
        country_code: string;
        /**
         * Simple Postal Address (Coarse-Grained)
         * @description A simple postal address with coarse-grained fields. Do not use for an international address. Use for backward compatibility only. Does not contain phone.
         */
        address: {
            /** @description The first line of the address. For example, number or street. */
            line1: string;
            /** @description The second line of the address. For example, suite or apartment number. */
            line2?: string;
            /** @description The city name. */
            city: string;
            /** @description The [code](/docs/api/reference/state-codes/) for a US state or the equivalent for other countries. Required for transactions if the address is in one of these countries: [Argentina](/docs/api/reference/state-codes/#argentina), [Brazil](/docs/api/reference/state-codes/#brazil), [Canada](/docs/api/reference/state-codes/#canada), [China](/docs/api/reference/state-codes/#china), [India](/docs/api/reference/state-codes/#india), [Italy](/docs/api/reference/state-codes/#italy), [Japan](/docs/api/reference/state-codes/#japan), [Mexico](/docs/api/reference/state-codes/#mexico), [Thailand](/docs/api/reference/state-codes/#thailand), or [United States](/docs/api/reference/state-codes/#usa). Maximum length is 40 single-byte characters. */
            state?: string;
            country_code: components["schemas"]["country_code"];
            /** @description The postal code, which is the zip code or equivalent. Typically required for countries with a postal code or an equivalent. See [postal code](https://en.wikipedia.org/wiki/Postal_code). */
            postal_code?: string;
        };
        /**
         * Payer Information
         * @description The payer information.
         */
        payer_info: {
            /** @description The PayPal` customer account ID. */
            account_id?: string;
            /** @description The email address of the payer. */
            email_address?: components["schemas"]["email_address"];
            /** @description The primary phone number of the payer. */
            phone_number?: components["schemas"]["phone"];
            /** @description The address status of the payer. Value is either:<ul><li><code>Y</code>. Verified.</li><li><code>N</code>. Not verified.</li></ul> */
            address_status?: string;
            /** @description The status of the payer. Value is `Y` or `N`. */
            payer_status?: string;
            /** @description The payer name. */
            payer_name?: components["schemas"]["name"];
            /** @description The [two-character ISO 3166-1 code](/api/rest/reference/country-codes/) that identifies the country or region of the payer.<blockquote><strong>Note:</strong> The country code for Great Britain is <code>GB</code> and not <code>UK</code> as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.</blockquote> */
            country_code?: components["schemas"]["country_code"];
            /** @description The payer address. */
            address?: components["schemas"]["address"];
        };
        /**
         * Shipping Information
         * @description The shipping information.
         */
        shipping_info: {
            /** @description The recipient's name. */
            name?: string;
            /** @description The shipping method that is associated with this order. */
            method?: string;
            /** @description The shipping address that is associated with this order. */
            address?: components["schemas"]["address"];
            /** @description The secondary shipping address that is associated with this order. */
            secondary_shipping_address?: components["schemas"]["address"];
        };
        /**
         * Tax Amount
         * @description The tax levied by a government on the purchase of goods or services.
         */
        item_detail_tax_amount: {
            /** @description The tax levied by a government on the purchase of goods or services. */
            tax_amount?: components["schemas"]["money"];
        };
        /**
         * Checkout Option
         * @description A checkout option as a name-and-value pair.
         */
        checkout_option: {
            /** @description The checkout option name, such as `color` or `texture`. */
            checkout_option_name?: string;
            /** @description The checkout option value. For example, the checkout option `color` might be `blue` or `red` while the checkout option `texture` might be `smooth` or `rippled`. */
            checkout_option_value?: string;
        };
        /**
         * Item Details
         * @description The item details.
         */
        item_detail: {
            /** @description An item code that identifies a merchant's goods or service. */
            item_code?: string;
            /** @description The item name. */
            item_name?: string;
            /** @description The item description. */
            item_description?: string;
            /** @description The item options. Describes option choices on the purchase of the item in some detail. */
            item_options?: string;
            /** @description The number of purchased units of goods or a service. */
            item_quantity?: string;
            /** @description The cost for each instance of goods or a service. */
            item_unit_price?: components["schemas"]["money"];
            /** @description The amount of the payment for the item. */
            item_amount?: components["schemas"]["money"];
            /** @description The reduction in price associated with goods or a service. */
            discount_amount?: components["schemas"]["money"];
            /** @description An increment or decrement to a purchase amount. */
            adjustment_amount?: components["schemas"]["money"];
            /** @description The amount of money charged for gift wrapping an item. */
            gift_wrap_amount?: components["schemas"]["money"];
            /** @description A rate, expressed in hundreds, that is used to calculate a levy for the purchase of goods or services. */
            tax_percentage?: components["schemas"]["percentage"];
            /** @description An array of tax amounts levied by a government on the purchase of goods or services. */
            tax_amounts?: components["schemas"]["item_detail_tax_amount"][];
            /** @description The delivery cost. */
            basic_shipping_amount?: components["schemas"]["money"];
            /** @description The cost for expedited delivery of the goods. */
            extra_shipping_amount?: components["schemas"]["money"];
            /** @description A charge for processing the purchase of goods or services. */
            handling_amount?: components["schemas"]["money"];
            /** @description A charge for guaranteeing the quality of a product or delivery of a product. */
            insurance_amount?: components["schemas"]["money"];
            /** @description The sum of all factors, item cost, discounts, tax, shipping, and so on, that goes into the cost of an item. */
            total_item_amount?: components["schemas"]["money"];
            /** @description The invoice number. An alphanumeric string that identifies a billing for a merchant. */
            invoice_number?: string;
            /** @description An array of checkout options. Each option has a name and value. */
            checkout_options?: components["schemas"]["checkout_option"][];
        };
        /**
         * Cart Information
         * @description The cart information.
         */
        cart_info: {
            /** @description An array of item details. */
            item_details?: components["schemas"]["item_detail"][];
            /**
             * @description Indicates whether the item amount or the shipping amount already includes tax.
             * @default false
             */
            tax_inclusive: boolean;
            /** @description The ID of the invoice. Appears for only PayPal-generated invoices. */
            paypal_invoice_id?: string;
        };
        /**
         * Store Information
         * @description The store information.
         */
        store_info: {
            /** @description The ID of a store for a merchant in the system of record. */
            store_id?: string;
            /** @description The terminal ID for the checkout stand in a merchant store. */
            terminal_id?: string;
        };
        /**
         * Auction Information
         * @description The auction information.
         */
        auction_info: {
            /** @description The name of the auction site. */
            auction_site?: string;
            /** @description The auction site URL. */
            auction_item_site?: string;
            /** @description The ID of the buyer who makes the purchase in the auction. This ID might be different from the payer ID provided for the payment. */
            auction_buyer_id?: string;
            /** @description The date and time when the auction closes, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). */
            auction_closing_date?: components["schemas"]["date_time"];
        };
        /**
         * Incentive Details
         * @description The incentive details.
         */
        incentive_detail: {
            /** @description The type of incentive, such as a special offer or coupon. */
            incentive_type?: string;
            /** @description The code that identifies an incentive, such as a coupon. */
            incentive_code?: string;
            /** @description The incentive amount. */
            incentive_amount?: components["schemas"]["money"];
            /** @description The incentive program code that identifies a merchant loyalty or incentive program. */
            incentive_program_code?: string;
        };
        /**
         * Incentive Information
         * @description The incentive details.
         */
        incentive_info: {
            /** @description An array of incentive details. */
            incentive_details?: components["schemas"]["incentive_detail"][];
        };
        /**
         * Transaction Details
         * @description The transaction details.
         */
        transaction_detail: {
            /** @description The transaction information. */
            transaction_info?: components["schemas"]["transaction_info"];
            /** @description The payer information. */
            payer_info?: components["schemas"]["payer_info"];
            /** @description The shipping information. */
            shipping_info?: components["schemas"]["shipping_info"];
            /** @description The cart information. */
            cart_info?: components["schemas"]["cart_info"];
            /** @description The store information. */
            store_info?: components["schemas"]["store_info"];
            /** @description The auction information. */
            auction_info?: components["schemas"]["auction_info"];
            /** @description The incentive information. */
            incentive_info?: components["schemas"]["incentive_info"];
        };
        /**
         * Link Description
         * @description The request-related [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) information.
         */
        link_description: {
            /** @description The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call. */
            href: string;
            /** @description The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml). */
            rel: string;
            /**
             * @description The HTTP method required to make the related call.
             * @enum {string}
             */
            method?: "GET" | "POST" | "PUT" | "DELETE" | "HEAD" | "CONNECT" | "OPTIONS" | "PATCH";
        };
        /**
         * Search Response
         * @description The search response information.
         */
        search_response: {
            /** @description An array of transaction detail objects. */
            transaction_details?: components["schemas"]["transaction_detail"][];
            /** @description The merchant account number. */
            account_number?: string;
            /** @description The start date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). */
            start_date?: components["schemas"]["date_time"];
            /** @description The end date and time or the last date when the data can be served, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). */
            end_date?: components["schemas"]["date_time"];
            /** @description The date and time when the data was last refreshed, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). */
            last_refreshed_datetime?: components["schemas"]["date_time"];
            /** @description A zero-relative index of transactions. */
            page?: number;
            /** @description The total number of transactions as an integer beginning with the specified `page` in the full result and not just in this response. */
            total_items?: number;
            /** @description The total number of pages, as an `integer`, when the `total_items` is divided into pages of the specified `page_size`. */
            total_pages?: number;
            /** @description An array of request-related [HATEOAS links](/api/rest/responses/#hateoas-links). */
            readonly links?: components["schemas"]["link_description"][];
        };
        /**
         * Balance Information
         * @description The Balance information.
         */
        balance_detail: {
            /** @description Currency Code of the balances listed. */
            currency: components["schemas"]["currency_code"];
            /** @description Optional field representing if the currency is primary currency or not. */
            primary?: boolean;
            /** @description The total amount in PayPal account. It is the sum of all the other balances. */
            total_balance: components["schemas"]["money"];
            /** @description The amount of cash in an Account which is at the customer's disposal. This amount is captured at settlement cutoff time in the user's time zone as defined for the user. */
            available_balance?: components["schemas"]["money"];
            /** @description Balance withheld in the account. The portion of funds that PayPal holds for the customer that is not currently at the customer's disposal. */
            withheld_balance?: components["schemas"]["money"];
        };
        /**
         * Format: ppaas_payer_id_v3
         * @description The PayPal payer ID, which is a masked version of the PayPal account number intended for use with third parties. The account number is reversibly encrypted and a proprietary variant of Base32 is used to encode the result.
         */
        account_id: string;
        /**
         * Balances Response
         * @description The balances response information.
         */
        balances_response: {
            /** @description An array of balance detail objects. */
            balances?: components["schemas"]["balance_detail"][];
            account_id?: components["schemas"]["account_id"];
            /** @description The requested date and time or the last date and time when the balances can be served, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). */
            as_of_time?: components["schemas"]["date_time"];
            /** @description The date and time when the balances was last refreshed, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). */
            last_refresh_time?: components["schemas"]["date_time"];
        };
    };
    responses: {
        /** @description The default response. */
        default: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["error_default"];
            };
        };
    };
    parameters: {
        /** @description Filters the transactions in the response by a PayPal transaction ID. A valid transaction ID is 17 characters long, except for an <a href="/docs/api/payments/v1/#definition-order">order ID</a>, which is 19 characters long.<blockquote><strong>Note:</strong> A transaction ID is not unique in the reporting system. The response can list two transactions with the same ID. One transaction can be balance affecting while the other is non-balance affecting.</blockquote> */
        transaction_id: string;
        /** @description Filters the transactions in the response by a PayPal transaction event code. See [Transaction event codes](/docs/integration/direct/transaction-search/transaction-event-codes/). */
        transaction_type: string;
        /** @description Filters the transactions in the response by a PayPal transaction status code. Value is:<table><thead><tr><th>Status&nbsp;code</th><th>Description</th></tr></thead><tbody><tr><td><code>D</code></td><td>PayPal or merchant rules denied the transaction.</td></tr><tr><td><code>P</code></td><td>The transaction is pending. The transaction was created but waits for another payment process to complete, such as an ACH transaction, before the status changes to <code>S</code>.</td></tr><tr><td><code>S</code></td><td>The transaction successfully completed without a denial and after any pending statuses.</td></tr><tr><td><code>V</code></td><td>A successful transaction was reversed and funds were refunded to the original sender.</td></tr></tbody></table> */
        transaction_status: string;
        /** @description Filters the transactions in the response by a gross transaction amount range. Specify the range as `<start-range> TO <end-range>`, where `<start-range>` is the lower limit of the gross PayPal transaction amount and `<end-range>` is the upper limit of the gross transaction amount. Specify the amounts in lower denominations. For example, to search for transactions from $5.00 to $10.05, specify `[500 TO 1005]`.<blockquote><strong>Note:</strong>The values must be URL encoded.</blockquote> */
        transaction_amount: string;
        /** @description Filters the transactions in the response by a [three-character ISO-4217 currency code](/api/rest/reference/currency-codes/) for the PayPal transaction currency. */
        transaction_currency: string;
        /** @description Filters the transactions in the response by a start date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required. Fractional seconds are optional. */
        start_date: string;
        /** @description Filters the transactions in the response by an end date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required. Fractional seconds are optional. The maximum supported range is 31 days. */
        end_date: string;
        /** @description Filters the transactions in the response by a payment instrument type. Value is either:<ul><li><code>CREDITCARD</code>. Returns a direct credit card transaction with a corresponding value.</li><li><code>DEBITCARD</code>. Returns a debit card transaction with a corresponding value.</li></ul>If you omit this parameter, the API does not apply this filter. */
        payment_instrument_type: string;
        /** @description Filters the transactions in the response by a store ID. */
        store_id: string;
        /** @description Filters the transactions in the response by a terminal ID. */
        terminal_id: string;
        /** @description Indicates which fields appear in the response. Value is a single field or a comma-separated list of fields. The <code>transaction_info</code> value returns only the transaction details in the response. To include all fields in the response, specify <code>fields=all</code>. Valid fields are:<ul><li><a href="/docs/api/transaction-search/v1/#definition-transaction_info"><code>transaction_info</code></a>. The transaction information. Includes the ID of the PayPal account of the payee, the PayPal-generated transaction ID, the PayPal-generated base ID, the PayPal reference ID type, the transaction event code, the date and time when the transaction was initiated and was last updated, the transaction amounts including the PayPal fee, any discounts, insurance, the transaction status, and other information about the transaction.</li><li><a href="/docs/api/transaction-search/v1/#definition-payer_info"><code>payer_info</code></a>. The payer information. Includes the PayPal customer account ID and the payer's email address, primary phone number, name, country code, address, and whether the payer is verified or unverified.</li><li><a href="/docs/api/transaction-search/v1/#definition-shipping_info"><code>shipping_info</code></a>. The shipping information. Includes the recipient's name, the shipping method for this order, the shipping address for this order, and the secondary address associated with this order.</li><li><a href="/docs/api/transaction-search/v1/#definition-auction_info"><code>auction_info</code></a>. The auction information. Includes the name of the auction site, the auction site URL, the ID of the customer who makes the purchase in the auction, and the date and time when the auction closes.</li><li><a href="/docs/api/transaction-search/v1/#definition-cart_info"><code>cart_info</code></a>. The cart information. Includes an array of item details, whether the item amount or the shipping amount already includes tax, and the ID of the invoice for PayPal-generated invoices.</li><li><a href="/docs/api/transaction-search/v1/#definition-incentive_info"><code>incentive_info</code></a>. An array of incentive detail objects. Each object includes the incentive, such as a special offer or coupon, the incentive amount, and the incentive program code that identifies a merchant loyalty or incentive program.</li><li><a href="/docs/api/transaction-search/v1/#definition-store_info"><code>store_info</code></a>. The store information. Includes the ID of the merchant store and the terminal ID for the checkout stand in the merchant store.</li></ul> */
        fields: string;
        /** @description Indicates whether the response includes only balance-impacting transactions or all transactions. Value is either:<ul><li><code>Y</code>. The default. The response includes only balance transactions.</li><li><code>N</code>. The response includes all transactions.</li></ul> */
        balance_affecting_records_only: string;
        /** @description The number of items to return in the response. So, the combination of `page=1` and `page_size=20` returns the first 20 items. The combination of `page=2` and `page_size=20` returns the next 20 items. */
        page_size: number;
        /** @description The zero-relative start index of the entire list of items that are returned in the response. So, the combination of `page=1` and `page_size=20` returns the first 20 items. */
        page: number;
        /** @description List balances in the response at the date time provided, will return the last refreshed balance in the system when not provided. */
        as_of_time: string;
        /** @description Filters the transactions in the response by a [three-character ISO-4217 currency code](/api/rest/reference/currency-codes/) for the PayPal transaction currency. */
        currency_code: string;
    };
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    "search.get": {
        parameters: {
            query: {
                /** @description Filters the transactions in the response by a PayPal transaction ID. A valid transaction ID is 17 characters long, except for an <a href="/docs/api/payments/v1/#definition-order">order ID</a>, which is 19 characters long.<blockquote><strong>Note:</strong> A transaction ID is not unique in the reporting system. The response can list two transactions with the same ID. One transaction can be balance affecting while the other is non-balance affecting.</blockquote> */
                transaction_id?: components["parameters"]["transaction_id"];
                /** @description Filters the transactions in the response by a PayPal transaction event code. See [Transaction event codes](/docs/integration/direct/transaction-search/transaction-event-codes/). */
                transaction_type?: components["parameters"]["transaction_type"];
                /** @description Filters the transactions in the response by a PayPal transaction status code. Value is:<table><thead><tr><th>Status&nbsp;code</th><th>Description</th></tr></thead><tbody><tr><td><code>D</code></td><td>PayPal or merchant rules denied the transaction.</td></tr><tr><td><code>P</code></td><td>The transaction is pending. The transaction was created but waits for another payment process to complete, such as an ACH transaction, before the status changes to <code>S</code>.</td></tr><tr><td><code>S</code></td><td>The transaction successfully completed without a denial and after any pending statuses.</td></tr><tr><td><code>V</code></td><td>A successful transaction was reversed and funds were refunded to the original sender.</td></tr></tbody></table> */
                transaction_status?: components["parameters"]["transaction_status"];
                /** @description Filters the transactions in the response by a gross transaction amount range. Specify the range as `<start-range> TO <end-range>`, where `<start-range>` is the lower limit of the gross PayPal transaction amount and `<end-range>` is the upper limit of the gross transaction amount. Specify the amounts in lower denominations. For example, to search for transactions from $5.00 to $10.05, specify `[500 TO 1005]`.<blockquote><strong>Note:</strong>The values must be URL encoded.</blockquote> */
                transaction_amount?: components["parameters"]["transaction_amount"];
                /** @description Filters the transactions in the response by a [three-character ISO-4217 currency code](/api/rest/reference/currency-codes/) for the PayPal transaction currency. */
                transaction_currency?: components["parameters"]["transaction_currency"];
                /** @description Filters the transactions in the response by a start date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required. Fractional seconds are optional. */
                start_date: components["parameters"]["start_date"];
                /** @description Filters the transactions in the response by an end date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required. Fractional seconds are optional. The maximum supported range is 31 days. */
                end_date: components["parameters"]["end_date"];
                /** @description Filters the transactions in the response by a payment instrument type. Value is either:<ul><li><code>CREDITCARD</code>. Returns a direct credit card transaction with a corresponding value.</li><li><code>DEBITCARD</code>. Returns a debit card transaction with a corresponding value.</li></ul>If you omit this parameter, the API does not apply this filter. */
                payment_instrument_type?: components["parameters"]["payment_instrument_type"];
                /** @description Filters the transactions in the response by a store ID. */
                store_id?: components["parameters"]["store_id"];
                /** @description Filters the transactions in the response by a terminal ID. */
                terminal_id?: components["parameters"]["terminal_id"];
                /** @description Indicates which fields appear in the response. Value is a single field or a comma-separated list of fields. The <code>transaction_info</code> value returns only the transaction details in the response. To include all fields in the response, specify <code>fields=all</code>. Valid fields are:<ul><li><a href="/docs/api/transaction-search/v1/#definition-transaction_info"><code>transaction_info</code></a>. The transaction information. Includes the ID of the PayPal account of the payee, the PayPal-generated transaction ID, the PayPal-generated base ID, the PayPal reference ID type, the transaction event code, the date and time when the transaction was initiated and was last updated, the transaction amounts including the PayPal fee, any discounts, insurance, the transaction status, and other information about the transaction.</li><li><a href="/docs/api/transaction-search/v1/#definition-payer_info"><code>payer_info</code></a>. The payer information. Includes the PayPal customer account ID and the payer's email address, primary phone number, name, country code, address, and whether the payer is verified or unverified.</li><li><a href="/docs/api/transaction-search/v1/#definition-shipping_info"><code>shipping_info</code></a>. The shipping information. Includes the recipient's name, the shipping method for this order, the shipping address for this order, and the secondary address associated with this order.</li><li><a href="/docs/api/transaction-search/v1/#definition-auction_info"><code>auction_info</code></a>. The auction information. Includes the name of the auction site, the auction site URL, the ID of the customer who makes the purchase in the auction, and the date and time when the auction closes.</li><li><a href="/docs/api/transaction-search/v1/#definition-cart_info"><code>cart_info</code></a>. The cart information. Includes an array of item details, whether the item amount or the shipping amount already includes tax, and the ID of the invoice for PayPal-generated invoices.</li><li><a href="/docs/api/transaction-search/v1/#definition-incentive_info"><code>incentive_info</code></a>. An array of incentive detail objects. Each object includes the incentive, such as a special offer or coupon, the incentive amount, and the incentive program code that identifies a merchant loyalty or incentive program.</li><li><a href="/docs/api/transaction-search/v1/#definition-store_info"><code>store_info</code></a>. The store information. Includes the ID of the merchant store and the terminal ID for the checkout stand in the merchant store.</li></ul> */
                fields?: components["parameters"]["fields"];
                /** @description Indicates whether the response includes only balance-impacting transactions or all transactions. Value is either:<ul><li><code>Y</code>. The default. The response includes only balance transactions.</li><li><code>N</code>. The response includes all transactions.</li></ul> */
                balance_affecting_records_only?: components["parameters"]["balance_affecting_records_only"];
                /** @description The number of items to return in the response. So, the combination of `page=1` and `page_size=20` returns the first 20 items. The combination of `page=2` and `page_size=20` returns the next 20 items. */
                page_size?: components["parameters"]["page_size"];
                /** @description The zero-relative start index of the entire list of items that are returned in the response. So, the combination of `page=1` and `page_size=20` returns the first 20 items. */
                page?: components["parameters"]["page"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description A successful request returns the HTTP `200 OK` status code and a JSON response body that lists transactions . */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["search_response"];
                };
            };
            default: components["responses"]["default"];
        };
    };
    "balances.get": {
        parameters: {
            query?: {
                /** @description List balances in the response at the date time provided, will return the last refreshed balance in the system when not provided. */
                as_of_time?: components["parameters"]["as_of_time"];
                /** @description Filters the transactions in the response by a [three-character ISO-4217 currency code](/api/rest/reference/currency-codes/) for the PayPal transaction currency. */
                currency_code?: components["parameters"]["currency_code"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description A successful request returns the HTTP `200 OK` status code and a JSON response body that lists balances . */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["balances_response"];
                };
            };
            /** @description The request is not well-formed, is syntactically incorrect, or violates schema. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["error_400"];
                };
            };
            /** @description Authorization failed due to insufficient permissions. */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["error_403"];
                };
            };
            /** @description An internal server error occurred. */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["error_500"];
                };
            };
            default: components["responses"]["default"];
        };
    };
}
